/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/156a10f3-4c82-40c0-8b7a-00183645fbf3 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float humidity;
  float pressure;
  float temperature;
  float temperature_esp32;
  bool red_led;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>

const int ledPin = 15; // Replace with the pin your LED is connected to
unsigned long lastTempMeasurement = 0;
const long tempInterval = 10000; // Interval between temperature readings, e.g., 10 seconds

Adafruit_BME280 bme;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();
  
  // Initialize the LED's state to off
  pinMode(ledPin, OUTPUT);
  digitalWrite(ledPin, LOW);

  bme.begin(0x76);

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  
  unsigned long currentMillis = millis();
  
  // Check if it's time for another temperature reading
  if (currentMillis - lastTempMeasurement >= tempInterval) {
    lastTempMeasurement = currentMillis;
    float temperature = temperatureRead(); // Replace with the correct function to read your sensor's temperature
    // Update the ESP32 temperature variable on Arduino IoT Cloud, if necessary
    temperature_esp32 = temperature;
   
  }
  
}

/*
  Since RedLed is READ_WRITE variable, onRedLedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onRedLedChange()  {
  // Update the LED state based on the value of ledState
  digitalWrite(ledPin, red_led ? HIGH : LOW);
}









